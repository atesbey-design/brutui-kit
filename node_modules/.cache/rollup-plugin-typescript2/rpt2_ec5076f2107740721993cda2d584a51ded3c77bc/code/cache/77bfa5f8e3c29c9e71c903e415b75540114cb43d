{"code":"export {};\r\n","references":[],"dts":{"name":"/Users/ates/neobrutUI/neobrut-ui-kit/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/Dialog/Dialog.types.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"react\" />\r\nexport interface DialogAction {\r\n    /**\r\n     * Text to display on the action button\r\n     */\r\n    text: string;\r\n    /**\r\n     * Callback to handle button click\r\n     */\r\n    onClick: () => void;\r\n    /**\r\n     * Whether the button is disabled\r\n     */\r\n    disabled?: boolean;\r\n    /**\r\n     * Optional icon to display on the button\r\n     */\r\n    icon?: React.ReactNode;\r\n}\r\nexport interface DialogProps {\r\n    /**\r\n     * Title of the dialog\r\n     */\r\n    title: string;\r\n    /**\r\n     * Content of the dialog\r\n     */\r\n    content: React.ReactNode;\r\n    /**\r\n     * Whether the dialog is open\r\n     */\r\n    isOpen: boolean;\r\n    /**\r\n     * Callback to close the dialog\r\n     */\r\n    onClose: () => void;\r\n    /**\r\n     * Primary action button\r\n     */\r\n    primaryAction?: DialogAction;\r\n    /**\r\n     * Secondary action button\r\n     */\r\n    secondaryAction?: DialogAction;\r\n    /**\r\n     * Tertiary action button\r\n     */\r\n    tertiaryAction?: DialogAction;\r\n    /**\r\n     * Size of the dialog ('small', 'medium', 'large')\r\n     */\r\n    size?: 'small' | 'medium' | 'large';\r\n    /**\r\n     * Whether the dialog should have an overlay\r\n     */\r\n    overlay?: boolean;\r\n    /**\r\n     * Custom class names for the dialog\r\n     */\r\n    className?: string;\r\n    /**\r\n     * Whether the dialog is critical (e.g., for destructive actions)\r\n     */\r\n    isCritical?: boolean;\r\n    /**\r\n     * Image to be displayed in the dialog\r\n     */\r\n    image?: string;\r\n    /**\r\n     * Callback when the dialog is opened\r\n     */\r\n    onOpen?: () => void;\r\n    /**\r\n     * Whether to close the dialog when clicking outside the content\r\n     */\r\n    closeOnOverlayClick?: boolean;\r\n    /**\r\n     * Custom footer content for the dialog\r\n     */\r\n    customFooter?: React.ReactNode;\r\n    /**\r\n     * Custom header content for the dialog (e.g., additional buttons)\r\n     */\r\n    customHeader?: React.ReactNode;\r\n    /**\r\n     * Whether the dialog is draggable\r\n     */\r\n    draggable?: boolean;\r\n    /**\r\n     * Minimum width of the dialog when resizing (if draggable)\r\n     */\r\n    minWidth?: number;\r\n    /**\r\n     * Minimum height of the dialog when resizing (if draggable)\r\n     */\r\n    minHeight?: number;\r\n    /**\r\n     * Custom styles for the dialog container\r\n     */\r\n    style?: React.CSSProperties;\r\n    /**\r\n     * Custom styles for the overlay\r\n     */\r\n    overlayStyle?: React.CSSProperties;\r\n    /**\r\n     * Custom styles for the header\r\n     */\r\n    headerStyle?: React.CSSProperties;\r\n    /**\r\n     * Custom styles for the content\r\n     */\r\n    contentStyle?: React.CSSProperties;\r\n    /**\r\n     * Custom styles for the footer\r\n     */\r\n    footerStyle?: React.CSSProperties;\r\n}\r\n"}}
