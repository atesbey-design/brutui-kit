{"code":"export {};\r\n","references":[],"dts":{"name":"/Users/ates/neobrutUI/neobrut-ui-kit/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/Input/Input.types.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"react\" />\r\nexport interface InputProps {\r\n    /**\r\n     * The label for the input field\r\n     */\r\n    label?: string;\r\n    /**\r\n     * Placeholder text for the input field\r\n     */\r\n    placeholder?: string;\r\n    /**\r\n     * Type of input, e.g., 'text', 'password', 'number'\r\n     */\r\n    type?: 'text' | 'password' | 'number';\r\n    /**\r\n     * The value of the input field\r\n     */\r\n    value?: string;\r\n    /**\r\n     * Callback when the input value changes\r\n     */\r\n    onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n    /**\r\n     * Indicates if the input is disabled\r\n     */\r\n    disabled?: boolean;\r\n    /**\r\n     * Validation state for the input, e.g., 'success', 'error'\r\n     */\r\n    validationState?: 'success' | 'error';\r\n    /**\r\n     * Helper text displayed below the input\r\n     */\r\n    helperText?: string;\r\n    /**\r\n     * Indicates if the input is required\r\n     */\r\n    required?: boolean;\r\n    /**\r\n     * Icon to be displayed inside the input field\r\n     */\r\n    icon?: React.ReactNode;\r\n    /**\r\n     * Whether to show a password toggle button for password inputs\r\n     */\r\n    showPasswordToggle?: boolean;\r\n    /**\r\n     * Autofill value for the input\r\n     */\r\n    autoFill?: boolean;\r\n    /**\r\n     * Leading text before the input value\r\n     */\r\n    leadingText?: string;\r\n    /**\r\n     * Trailing text after the input value\r\n     */\r\n    trailingText?: string;\r\n    /**\r\n     * Size of the input, e.g., 'small', 'medium', 'large'\r\n     */\r\n    size?: 'small' | 'medium' | 'large';\r\n    /**\r\n     * Inline label option for the input\r\n     */\r\n    inlineLabel?: boolean;\r\n    /**\r\n     * CSS class names for custom styling\r\n     */\r\n    className?: string;\r\n}\r\n"}}
