{"code":"import React, { useEffect, useRef } from 'react';\r\nimport { DropdownContainer, DropdownButton, DropdownContent, DropdownItem, DropdownFooter } from './Dropdown.styles';\r\nexport var Dropdown = function (_a) {\r\n    var label = _a.label, items = _a.items, _b = _a.kind, kind = _b === void 0 ? 'default' : _b, _c = _a.size, size = _c === void 0 ? 'medium' : _c, _d = _a.disabled, disabled = _d === void 0 ? false : _d, _e = _a.isOpen, isOpen = _e === void 0 ? false : _e, onToggle = _a.onToggle, className = _a.className, buttonIcon = _a.buttonIcon, _f = _a.isActive, isActive = _f === void 0 ? false : _f, _g = _a.closeOnOutsideClick, closeOnOutsideClick = _g === void 0 ? true : _g, maxHeight = _a.maxHeight, customFooter = _a.customFooter, style = _a.style, buttonStyle = _a.buttonStyle, contentStyle = _a.contentStyle, footerStyle = _a.footerStyle;\r\n    var dropdownRef = useRef(null);\r\n    useEffect(function () {\r\n        if (closeOnOutsideClick) {\r\n            var handleClickOutside_1 = function (event) {\r\n                if (dropdownRef.current && !dropdownRef.current.contains(event.target) && isOpen) {\r\n                    onToggle();\r\n                }\r\n            };\r\n            document.addEventListener('mousedown', handleClickOutside_1);\r\n            return function () {\r\n                document.removeEventListener('mousedown', handleClickOutside_1);\r\n            };\r\n        }\r\n    }, [isOpen, onToggle, closeOnOutsideClick]);\r\n    return (React.createElement(DropdownContainer, { ref: dropdownRef, className: className, style: style },\r\n        React.createElement(DropdownButton, { onClick: function () { return !disabled && onToggle(); }, disabled: disabled, kind: kind, size: size, isActive: isActive, style: buttonStyle },\r\n            buttonIcon,\r\n            label),\r\n        React.createElement(DropdownContent, { isOpen: isOpen, maxHeight: maxHeight, style: contentStyle },\r\n            items.map(function (item, index) { return (React.createElement(DropdownItem, { key: index, onClick: function () { return !item.disabled && item.onSelect(); }, disabled: item.disabled, style: item.style },\r\n                item.icon,\r\n                item.text)); }),\r\n            customFooter && (React.createElement(DropdownFooter, { style: footerStyle }, customFooter)))));\r\n};\r\nexport default Dropdown;\r\n","references":["/Users/ates/neobrutUI/neobrut-ui-kit/node_modules/@types/react/ts5.0/index.d.ts","/Users/ates/neobrutUI/neobrut-ui-kit/src/components/Dropdown/Dropdown.types.ts","/Users/ates/neobrutUI/neobrut-ui-kit/src/components/Dropdown/Dropdown.styles.ts"],"dts":{"name":"/Users/ates/neobrutUI/neobrut-ui-kit/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/Dropdown/Dropdown.d.ts","writeByteOrderMark":false,"text":"import React from 'react';\r\nimport { DropdownProps } from './Dropdown.types';\r\nexport declare const Dropdown: React.FC<DropdownProps>;\r\nexport default Dropdown;\r\n"}}
