{"code":"export {};\r\n","references":[],"dts":{"name":"/Users/ates/neobrutUI/neobrut-ui-kit/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/Datatable/Datatable.types.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"react\" />\r\nexport interface DataTableProps {\r\n    /**\r\n     * Data to be displayed in the table\r\n     */\r\n    data: Array<Record<string, any>>;\r\n    /**\r\n     * Columns configuration for the table\r\n     */\r\n    columns: Array<{\r\n        header: string;\r\n        accessor: string;\r\n        sortable?: boolean;\r\n        width?: string;\r\n        cellRenderer?: (data: any) => React.ReactNode;\r\n        /**\r\n         * Custom styles for the column cells\r\n         */\r\n        cellStyle?: React.CSSProperties;\r\n        /**\r\n         * Custom class name for the column cells\r\n         */\r\n        cellClassName?: string;\r\n    }>;\r\n    /**\r\n     * Callback when a row is selected\r\n     */\r\n    onRowSelect?: (selectedRows: Array<any>) => void;\r\n    /**\r\n     * Whether the table rows are selectable\r\n     */\r\n    selectable?: boolean;\r\n    /**\r\n     * Number of rows to display per page\r\n     */\r\n    rowsPerPage?: number;\r\n    /**\r\n     * Custom class names for the table\r\n     */\r\n    className?: string;\r\n    /**\r\n     * Callback for sorting columns\r\n     */\r\n    onSort?: (column: string, direction: 'asc' | 'desc') => void;\r\n}\r\nexport interface DataTableRowProps {\r\n    /**\r\n     * Data for the specific row\r\n     */\r\n    rowData: Record<string, any>;\r\n    /**\r\n     * Columns configuration for the row\r\n     */\r\n    columns: DataTableProps['columns'];\r\n    /**\r\n     * Whether the row is selectable\r\n     */\r\n    selectable?: boolean;\r\n    /**\r\n     * Callback when the row is selected\r\n     */\r\n    onSelect?: (selected: boolean) => void;\r\n    /**\r\n     * Custom styles for the row\r\n     */\r\n    rowStyle?: React.CSSProperties;\r\n    /**\r\n     * Custom class name for the row\r\n     */\r\n    rowClassName?: string;\r\n    /**\r\n     * Whether the row is currently selected\r\n     */\r\n    selected?: boolean;\r\n}\r\nexport type SortDirection = 'asc' | 'desc';\r\n"}}
