{"code":"import { __makeTemplateObject } from \"tslib\";\r\nimport styled from 'styled-components';\r\nimport { colorPalette } from '../../color.type';\r\nvar PopoverVariants = {\r\n    default: {\r\n        bgColor: 'white',\r\n        textColor: colorPalette.black[0],\r\n        borderColor: colorPalette.black[0]\r\n    },\r\n    primary: {\r\n        bgColor: colorPalette.blue[4],\r\n        textColor: 'white',\r\n        borderColor: colorPalette.black[0]\r\n    },\r\n    secondary: {\r\n        bgColor: colorPalette.purple[0],\r\n        textColor: 'white',\r\n        borderColor: colorPalette.black[0]\r\n    },\r\n    success: {\r\n        bgColor: colorPalette.green[0],\r\n        textColor: colorPalette.black[0],\r\n        borderColor: colorPalette.black[0]\r\n    },\r\n    warning: {\r\n        bgColor: colorPalette.yellow[0],\r\n        textColor: colorPalette.black[0],\r\n        borderColor: colorPalette.black[0]\r\n    },\r\n    danger: {\r\n        bgColor: colorPalette.red[0],\r\n        textColor: 'white',\r\n        borderColor: colorPalette.black[0]\r\n    }\r\n};\r\nexport var PopoverWrapper = styled.div(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  position: relative;\\n  display: inline-block;\\n\"], [\"\\n  position: relative;\\n  display: inline-block;\\n\"])));\r\nexport var TriggerWrapper = styled.button(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n  font-weight: bold;\\n  transition: all 0.2s;\\n  cursor: pointer;\\n  background: white;\\n  color: black;\\n  font-size: 1rem;\\n  border: none;\\n\"], [\"\\n  font-weight: bold;\\n  transition: all 0.2s;\\n  cursor: pointer;\\n  background: white;\\n  color: black;\\n  font-size: 1rem;\\n  border: none;\\n\"])));\r\nexport var PopoverContent = styled.div(templateObject_3 || (templateObject_3 = __makeTemplateObject([\"\\n  position: absolute;\\n  z-index: \", \";\\n  min-width: 200px;\\n  max-width: 28rem;\\n  font-size: 1rem;\\n  line-height: 1.5;\\n  font-weight: bold;\\n  background: \", \";\\n  color: \", \";\\n  border: 4px solid \", \";\\n  padding: 1rem;\\n  box-shadow: 4px 4px 0px 0px rgba(0,0,0,1);\\n\\n  \", \"\\n\\n  .header {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: flex-start;\\n    margin-bottom: 0.5rem;\\n\\n    h3 {\\n      font-size: 1.25rem;\\n      font-weight: bold;\\n    }\\n  }\\n\\n  .content {\\n    font-size: 1rem;\\n    line-height: 1.5;\\n  }\\n\"], [\"\\n  position: absolute;\\n  z-index: \", \";\\n  min-width: 200px;\\n  max-width: 28rem;\\n  font-size: 1rem;\\n  line-height: 1.5;\\n  font-weight: bold;\\n  background: \", \";\\n  color: \", \";\\n  border: 4px solid \", \";\\n  padding: 1rem;\\n  box-shadow: 4px 4px 0px 0px rgba(0,0,0,1);\\n\\n  \", \"\\n\\n  .header {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: flex-start;\\n    margin-bottom: 0.5rem;\\n\\n    h3 {\\n      font-size: 1.25rem;\\n      font-weight: bold;\\n    }\\n  }\\n\\n  .content {\\n    font-size: 1rem;\\n    line-height: 1.5;\\n  }\\n\"])), function (props) { return props.zIndex || 1000; }, function (props) { return props.variant ? PopoverVariants[props.variant].bgColor : 'white'; }, function (props) { return props.variant ? PopoverVariants[props.variant].textColor : 'black'; }, function (props) { return props.variant ? PopoverVariants[props.variant].borderColor : 'black'; }, function (props) {\r\n    switch (props.position) {\r\n        case 'top':\r\n            return \"\\n          bottom: 100%;\\n          left: 50%;\\n          transform: translateX(-50%);\\n        \";\r\n        case 'bottom':\r\n            return \"\\n          top: 100%;\\n          left: 50%;\\n          transform: translateX(-50%);\\n        \";\r\n        case 'left':\r\n            return \"\\n          right: 100%;\\n          top: 50%;\\n          transform: translateY(-50%);\\n        \";\r\n        case 'right':\r\n            return \"\\n          left: 100%;\\n          top: 50%;\\n          transform: translateY(-50%);\\n        \";\r\n        default:\r\n            return \"\\n          top: 100%;\\n          left: 50%;\\n          transform: translateX(-50%);\\n        \";\r\n    }\r\n});\r\nexport var PopoverCloseButton = styled.button(templateObject_4 || (templateObject_4 = __makeTemplateObject([\"\\n  position: absolute;\\n  top: 0.5rem;\\n  right: 0.5rem;\\n  width: 24px;\\n  height: 24px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  background: transparent;\\n  border: 2px solid currentColor;\\n  border-radius: 4px;\\n  color: inherit;\\n  cursor: pointer;\\n  font-size: 1rem;\\n  font-weight: bold;\\n  padding: 0;\\n  transition: all 0.2s ease;\\n\\n  &:hover {\\n    background: currentColor;\\n    color: \", \";\\n  }\\n\\n  &:focus {\\n    outline: none;\\n    box-shadow: 0 0 0 2px currentColor;\\n  }\\n\"], [\"\\n  position: absolute;\\n  top: 0.5rem;\\n  right: 0.5rem;\\n  width: 24px;\\n  height: 24px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  background: transparent;\\n  border: 2px solid currentColor;\\n  border-radius: 4px;\\n  color: inherit;\\n  cursor: pointer;\\n  font-size: 1rem;\\n  font-weight: bold;\\n  padding: 0;\\n  transition: all 0.2s ease;\\n\\n  &:hover {\\n    background: currentColor;\\n    color: \", \";\\n  }\\n\\n  &:focus {\\n    outline: none;\\n    box-shadow: 0 0 0 2px currentColor;\\n  }\\n\"])), function (props) { return props.variant ? PopoverVariants[props.variant].bgColor : 'white'; });\r\nvar templateObject_1, templateObject_2, templateObject_3, templateObject_4;\r\n","references":["/Users/ates/neobrutUI/neobrut-ui-kit/node_modules/styled-components/dist/index.d.ts","/Users/ates/neobrutUI/neobrut-ui-kit/src/components/Popover/Popover.types.ts","/Users/ates/neobrutUI/neobrut-ui-kit/src/color.type.ts"],"dts":{"name":"/Users/ates/neobrutUI/neobrut-ui-kit/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/Popover/Popover.styles.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"react\" />\r\nimport { PopoverProps, PopoverVariant } from './Popover.types';\r\nexport declare const PopoverWrapper: import(\"styled-components/dist/types\").IStyledComponentBase<\"web\", import(\"styled-components\").FastOmit<import(\"react\").DetailedHTMLProps<import(\"react\").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, never>> & string;\r\nexport declare const TriggerWrapper: import(\"styled-components/dist/types\").IStyledComponentBase<\"web\", import(\"styled-components\").FastOmit<import(\"react\").DetailedHTMLProps<import(\"react\").ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, never>> & string;\r\nexport declare const PopoverContent: import(\"styled-components/dist/types\").IStyledComponentBase<\"web\", import(\"styled-components/dist/types\").Substitute<import(\"react\").DetailedHTMLProps<import(\"react\").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, Partial<PopoverProps>>> & string;\r\nexport declare const PopoverCloseButton: import(\"styled-components/dist/types\").IStyledComponentBase<\"web\", import(\"styled-components/dist/types\").Substitute<import(\"react\").DetailedHTMLProps<import(\"react\").ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, {\r\n    variant?: PopoverVariant | undefined;\r\n}>> & string;\r\n"}}
