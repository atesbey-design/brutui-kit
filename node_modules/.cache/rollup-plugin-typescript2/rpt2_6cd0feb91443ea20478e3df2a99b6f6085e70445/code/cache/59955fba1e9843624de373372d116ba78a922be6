{"code":"import React, { useState } from 'react';\r\nimport { InputWrapper, Label, HelperText, InputField, IconWrapper, LeadingText, TrailingText, InputContainer, } from './Input.styles';\r\nimport { Eye, EyeOff } from 'lucide-react';\r\nvar Input = function (_a) {\r\n    var label = _a.label, placeholder = _a.placeholder, _b = _a.type, type = _b === void 0 ? 'text' : _b, _c = _a.value, value = _c === void 0 ? '' : _c, onChange = _a.onChange, disabled = _a.disabled, validationState = _a.validationState, helperText = _a.helperText, required = _a.required, icon = _a.icon, autoFill = _a.autoFill, leadingText = _a.leadingText, trailingText = _a.trailingText, _d = _a.size, size = _d === void 0 ? 'medium' : _d, inlineLabel = _a.inlineLabel, className = _a.className;\r\n    var _e = useState(value), inputValue = _e[0], setInputValue = _e[1];\r\n    var _f = useState(false), showPassword = _f[0], setShowPassword = _f[1];\r\n    var handleInputChange = function (e) {\r\n        var newValue = e.target.value;\r\n        setInputValue(newValue);\r\n        if (onChange) {\r\n            onChange(e);\r\n        }\r\n    };\r\n    var togglePasswordVisibility = function () {\r\n        setShowPassword(!showPassword);\r\n    };\r\n    return (React.createElement(InputWrapper, { className: className },\r\n        label && React.createElement(Label, { inlineLabel: inlineLabel },\r\n            label,\r\n            \" \",\r\n            required && '*'),\r\n        React.createElement(InputContainer, null,\r\n            leadingText && React.createElement(LeadingText, null, leadingText),\r\n            React.createElement(InputField, { type: type === 'password' ? (showPassword ? 'text' : 'password') : type, placeholder: placeholder, value: inputValue, onChange: handleInputChange, disabled: disabled, validationState: validationState, autoComplete: autoFill ? 'on' : 'off', size: size }),\r\n            icon && React.createElement(IconWrapper, null, icon),\r\n            type === 'password' && (React.createElement(IconWrapper, { onClick: togglePasswordVisibility, style: { cursor: 'pointer', color: '#000000' } }, showPassword ? React.createElement(EyeOff, { size: 20 }) : React.createElement(Eye, { size: 20 }))),\r\n            trailingText && React.createElement(TrailingText, null, trailingText)),\r\n        helperText && React.createElement(HelperText, { validationState: validationState }, helperText)));\r\n};\r\nexport default Input;\r\n","references":["/Users/ates/neobrutUI/neobrut-ui-kit/node_modules/@types/react/ts5.0/index.d.ts","/Users/ates/neobrutUI/neobrut-ui-kit/src/components/Input/Input.types.ts","/Users/ates/neobrutUI/neobrut-ui-kit/src/components/Input/Input.styles.ts","/Users/ates/neobrutUI/neobrut-ui-kit/node_modules/lucide-react/dist/lucide-react.d.ts"],"dts":{"name":"/Users/ates/neobrutUI/neobrut-ui-kit/node_modules/.cache/rollup-plugin-typescript2/placeholder/components/Input/Input.d.ts","writeByteOrderMark":false,"text":"import React from 'react';\r\nimport { InputProps } from './Input.types';\r\ndeclare const Input: React.FC<InputProps>;\r\nexport default Input;\r\n"}}
